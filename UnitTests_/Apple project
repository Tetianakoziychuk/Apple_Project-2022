
import unittest
from selenium import webdriver
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.common.by import By
import time
from selenium.webdriver.common.keys import Keys

from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


class ChromeSearchTest(unittest.TestCase):


    def setUp(self):
        self.driver = webdriver.Chrome()
        self.driver.maximize_window()

    # Methods in UnitTest should start from "test" keyword
    def test_search_1(self):
        driver = self.driver
        driver.get("http://www.apple.com")

        # Check that an element is present on the DOM of a page and visible.
        try:
            WebDriverWait(driver, 10) \
                .until(EC.visibility_of_element_located((By.NAME, "q")))
            print("First Chrome Page is ready!")
            driver.get_screenshot_as_file('GooglePage.png')
        except TimeoutException:
            print("Loading took too much time!")
            # driver.get_screenshot_as_file('google_page_loading_error.png')
            # driver.save_screenshot('UnitTests/Screenshots/google_page_loading_error.png')
driver = webdriver.Chrome()
driver.get("https://www.apple.com")

driver.find_element(By.XPATH, "//a[@class='ac-gn-link ac-gn-link-store'][contains(.,'Store')]").click()
driver.find_element(By.XPATH, "//div[contains(@class,'rf-productnav-card-image')]").click()
driver.find_element(By.XPATH, "//img[contains(@width,'600')]").click()


# Anything declared in tearDown will be executed for all test cases
# Closing browser. You need to use "tearDown" method only one time for every Class
def tearDown(self):
    self.driver.quit()


if __name__ == "__main__":
    unittest.main()
